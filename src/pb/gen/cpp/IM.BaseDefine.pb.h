// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IM.BaseDefine.proto

#ifndef PROTOBUF_IM_2eBaseDefine_2eproto__INCLUDED
#define PROTOBUF_IM_2eBaseDefine_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace IM {
namespace BaseDefine {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_IM_2eBaseDefine_2eproto();
void protobuf_AssignDesc_IM_2eBaseDefine_2eproto();
void protobuf_ShutdownFile_IM_2eBaseDefine_2eproto();

class PBHeader;

enum ServiceID {
  SID_MSG = 1,
  SID_OTHER = 7
};
bool ServiceID_IsValid(int value);
const ServiceID ServiceID_MIN = SID_MSG;
const ServiceID ServiceID_MAX = SID_OTHER;
const int ServiceID_ARRAYSIZE = ServiceID_MAX + 1;

const ::google::protobuf::EnumDescriptor* ServiceID_descriptor();
inline const ::std::string& ServiceID_Name(ServiceID value) {
  return ::google::protobuf::internal::NameOfEnum(
    ServiceID_descriptor(), value);
}
inline bool ServiceID_Parse(
    const ::std::string& name, ServiceID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ServiceID>(
    ServiceID_descriptor(), name, value);
}
enum MessageCmdID {
  CID_MSG_DATA = 257,
  CID_MSG_DATA_ACK = 258
};
bool MessageCmdID_IsValid(int value);
const MessageCmdID MessageCmdID_MIN = CID_MSG_DATA;
const MessageCmdID MessageCmdID_MAX = CID_MSG_DATA_ACK;
const int MessageCmdID_ARRAYSIZE = MessageCmdID_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageCmdID_descriptor();
inline const ::std::string& MessageCmdID_Name(MessageCmdID value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageCmdID_descriptor(), value);
}
inline bool MessageCmdID_Parse(
    const ::std::string& name, MessageCmdID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageCmdID>(
    MessageCmdID_descriptor(), name, value);
}
enum OtherCmdID {
  CID_OTHER_HEARTBEAT = 1793
};
bool OtherCmdID_IsValid(int value);
const OtherCmdID OtherCmdID_MIN = CID_OTHER_HEARTBEAT;
const OtherCmdID OtherCmdID_MAX = CID_OTHER_HEARTBEAT;
const int OtherCmdID_ARRAYSIZE = OtherCmdID_MAX + 1;

const ::google::protobuf::EnumDescriptor* OtherCmdID_descriptor();
inline const ::std::string& OtherCmdID_Name(OtherCmdID value) {
  return ::google::protobuf::internal::NameOfEnum(
    OtherCmdID_descriptor(), value);
}
inline bool OtherCmdID_Parse(
    const ::std::string& name, OtherCmdID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OtherCmdID>(
    OtherCmdID_descriptor(), name, value);
}
enum ResultType {
  REFUSE_REASON_NONE = 0,
  REFUSE_REASON_NO_MSG_SERVER = 1
};
bool ResultType_IsValid(int value);
const ResultType ResultType_MIN = REFUSE_REASON_NONE;
const ResultType ResultType_MAX = REFUSE_REASON_NO_MSG_SERVER;
const int ResultType_ARRAYSIZE = ResultType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResultType_descriptor();
inline const ::std::string& ResultType_Name(ResultType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResultType_descriptor(), value);
}
inline bool ResultType_Parse(
    const ::std::string& name, ResultType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResultType>(
    ResultType_descriptor(), name, value);
}
enum UserStatType {
  USER_STATUS_ONLINE = 1,
  USER_STATUS_OFFLINE = 2,
  USER_STATUS_LEAVE = 3
};
bool UserStatType_IsValid(int value);
const UserStatType UserStatType_MIN = USER_STATUS_ONLINE;
const UserStatType UserStatType_MAX = USER_STATUS_LEAVE;
const int UserStatType_ARRAYSIZE = UserStatType_MAX + 1;

const ::google::protobuf::EnumDescriptor* UserStatType_descriptor();
inline const ::std::string& UserStatType_Name(UserStatType value) {
  return ::google::protobuf::internal::NameOfEnum(
    UserStatType_descriptor(), value);
}
inline bool UserStatType_Parse(
    const ::std::string& name, UserStatType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserStatType>(
    UserStatType_descriptor(), name, value);
}
enum MsgType {
  MSG_TYPE_SINGLE_TEXT = 1,
  MSG_TYPE_SINGLE_AUDIO = 2,
  MSG_TYPE_GROUP_TEXT = 17,
  MSG_TYPE_GROUP_AUDIO = 18
};
bool MsgType_IsValid(int value);
const MsgType MsgType_MIN = MSG_TYPE_SINGLE_TEXT;
const MsgType MsgType_MAX = MSG_TYPE_GROUP_AUDIO;
const int MsgType_ARRAYSIZE = MsgType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MsgType_descriptor();
inline const ::std::string& MsgType_Name(MsgType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MsgType_descriptor(), value);
}
inline bool MsgType_Parse(
    const ::std::string& name, MsgType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MsgType>(
    MsgType_descriptor(), name, value);
}
// ===================================================================

class PBHeader : public ::google::protobuf::Message {
 public:
  PBHeader();
  virtual ~PBHeader();

  PBHeader(const PBHeader& from);

  inline PBHeader& operator=(const PBHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PBHeader& default_instance();

  void Swap(PBHeader* other);

  // implements Message ----------------------------------------------

  PBHeader* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PBHeader& from);
  void MergeFrom(const PBHeader& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 length = 1;
  inline bool has_length() const;
  inline void clear_length();
  static const int kLengthFieldNumber = 1;
  inline ::google::protobuf::uint32 length() const;
  inline void set_length(::google::protobuf::uint32 value);

  // required uint32 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // required uint32 flag = 3;
  inline bool has_flag() const;
  inline void clear_flag();
  static const int kFlagFieldNumber = 3;
  inline ::google::protobuf::uint32 flag() const;
  inline void set_flag(::google::protobuf::uint32 value);

  // required uint32 moduleId = 4;
  inline bool has_moduleid() const;
  inline void clear_moduleid();
  static const int kModuleIdFieldNumber = 4;
  inline ::google::protobuf::uint32 moduleid() const;
  inline void set_moduleid(::google::protobuf::uint32 value);

  // required uint32 commandId = 5;
  inline bool has_commandid() const;
  inline void clear_commandid();
  static const int kCommandIdFieldNumber = 5;
  inline ::google::protobuf::uint32 commandid() const;
  inline void set_commandid(::google::protobuf::uint32 value);

  // required uint32 seqNumber = 6;
  inline bool has_seqnumber() const;
  inline void clear_seqnumber();
  static const int kSeqNumberFieldNumber = 6;
  inline ::google::protobuf::uint32 seqnumber() const;
  inline void set_seqnumber(::google::protobuf::uint32 value);

  // required uint32 reserved = 7;
  inline bool has_reserved() const;
  inline void clear_reserved();
  static const int kReservedFieldNumber = 7;
  inline ::google::protobuf::uint32 reserved() const;
  inline void set_reserved(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:IM.BaseDefine.PBHeader)
 private:
  inline void set_has_length();
  inline void clear_has_length();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_flag();
  inline void clear_has_flag();
  inline void set_has_moduleid();
  inline void clear_has_moduleid();
  inline void set_has_commandid();
  inline void clear_has_commandid();
  inline void set_has_seqnumber();
  inline void clear_has_seqnumber();
  inline void set_has_reserved();
  inline void clear_has_reserved();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 length_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 moduleid_;
  ::google::protobuf::uint32 commandid_;
  ::google::protobuf::uint32 seqnumber_;
  ::google::protobuf::uint32 reserved_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];

  friend void  protobuf_AddDesc_IM_2eBaseDefine_2eproto();
  friend void protobuf_AssignDesc_IM_2eBaseDefine_2eproto();
  friend void protobuf_ShutdownFile_IM_2eBaseDefine_2eproto();

  void InitAsDefaultInstance();
  static PBHeader* default_instance_;
};
// ===================================================================


// ===================================================================

// PBHeader

// required uint32 length = 1;
inline bool PBHeader::has_length() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PBHeader::set_has_length() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PBHeader::clear_has_length() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PBHeader::clear_length() {
  length_ = 0u;
  clear_has_length();
}
inline ::google::protobuf::uint32 PBHeader::length() const {
  return length_;
}
inline void PBHeader::set_length(::google::protobuf::uint32 value) {
  set_has_length();
  length_ = value;
}

// required uint32 version = 2;
inline bool PBHeader::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PBHeader::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PBHeader::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PBHeader::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 PBHeader::version() const {
  return version_;
}
inline void PBHeader::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// required uint32 flag = 3;
inline bool PBHeader::has_flag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PBHeader::set_has_flag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PBHeader::clear_has_flag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PBHeader::clear_flag() {
  flag_ = 0u;
  clear_has_flag();
}
inline ::google::protobuf::uint32 PBHeader::flag() const {
  return flag_;
}
inline void PBHeader::set_flag(::google::protobuf::uint32 value) {
  set_has_flag();
  flag_ = value;
}

// required uint32 moduleId = 4;
inline bool PBHeader::has_moduleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PBHeader::set_has_moduleid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PBHeader::clear_has_moduleid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PBHeader::clear_moduleid() {
  moduleid_ = 0u;
  clear_has_moduleid();
}
inline ::google::protobuf::uint32 PBHeader::moduleid() const {
  return moduleid_;
}
inline void PBHeader::set_moduleid(::google::protobuf::uint32 value) {
  set_has_moduleid();
  moduleid_ = value;
}

// required uint32 commandId = 5;
inline bool PBHeader::has_commandid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PBHeader::set_has_commandid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PBHeader::clear_has_commandid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PBHeader::clear_commandid() {
  commandid_ = 0u;
  clear_has_commandid();
}
inline ::google::protobuf::uint32 PBHeader::commandid() const {
  return commandid_;
}
inline void PBHeader::set_commandid(::google::protobuf::uint32 value) {
  set_has_commandid();
  commandid_ = value;
}

// required uint32 seqNumber = 6;
inline bool PBHeader::has_seqnumber() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PBHeader::set_has_seqnumber() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PBHeader::clear_has_seqnumber() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PBHeader::clear_seqnumber() {
  seqnumber_ = 0u;
  clear_has_seqnumber();
}
inline ::google::protobuf::uint32 PBHeader::seqnumber() const {
  return seqnumber_;
}
inline void PBHeader::set_seqnumber(::google::protobuf::uint32 value) {
  set_has_seqnumber();
  seqnumber_ = value;
}

// required uint32 reserved = 7;
inline bool PBHeader::has_reserved() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PBHeader::set_has_reserved() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PBHeader::clear_has_reserved() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PBHeader::clear_reserved() {
  reserved_ = 0u;
  clear_has_reserved();
}
inline ::google::protobuf::uint32 PBHeader::reserved() const {
  return reserved_;
}
inline void PBHeader::set_reserved(::google::protobuf::uint32 value) {
  set_has_reserved();
  reserved_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace BaseDefine
}  // namespace IM

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::IM::BaseDefine::ServiceID>() {
  return ::IM::BaseDefine::ServiceID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::IM::BaseDefine::MessageCmdID>() {
  return ::IM::BaseDefine::MessageCmdID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::IM::BaseDefine::OtherCmdID>() {
  return ::IM::BaseDefine::OtherCmdID_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::IM::BaseDefine::ResultType>() {
  return ::IM::BaseDefine::ResultType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::IM::BaseDefine::UserStatType>() {
  return ::IM::BaseDefine::UserStatType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::IM::BaseDefine::MsgType>() {
  return ::IM::BaseDefine::MsgType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_IM_2eBaseDefine_2eproto__INCLUDED
